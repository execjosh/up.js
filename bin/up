#!/usr/bin/env node

// Generated by CoffeeScript 1.3.3
(function() {
  var argv, fs, http, parseArgv, path, up, util;

  fs = require("fs");

  http = require("http");

  path = require("path");

  util = require("util");

  up = require(require("path").join(__dirname, "../lib/up"));

  parseArgv = function(argv, cb) {
    var host, opt, opts, port, rootPath, stats, _i, _len;
    opts = {
      host: "0.0.0.0",
      port: 1337
    };
    for (_i = 0, _len = argv.length; _i < _len; _i++) {
      opt = argv[_i];
      if (!/^--/.test(opt)) {
        return cb(new Error("Unknown Option: " + opt));
      }
      if (/^--addr=(([^:]*)(:(\d*))?)?$/.test(opt)) {
        host = RegExp.$2;
        if (host !== null && 0 < host.length) {
          opts.host = host;
        }
        port = +RegExp.$4;
        if (!isNaN(port) && 0 < port) {
          opts.port = port;
        }
      } else if (/^--root=(.*)$/.test(opt)) {
        rootPath = path.resolve(RegExp.$1);
        stats = fs.statSync(rootPath);
        if (!stats.isDirectory()) {
          return cb(new Error("Root must be a directory: " + rootPath));
        }
        opts.rootPath = rootPath;
      } else if (opt === "--version") {
        console.log("v" + up.VERSION);
        return;
      } else {
        return cb(new Error("Invalid Option: " + opt));
      }
    }
    return cb(null, opts);
  };

  argv = process.argv.slice(2);

  parseArgv(argv, function(err, opts) {
    var server;
    if (err != null) {
      throw err;
    }
    server = http.createServer(up(opts));
    server.on("listening", function() {
      var addr;
      addr = server.address();
      util.log("Serving " + opts.rootPath + " at " + addr.address + ":" + addr.port);
    });
    server.listen(opts.port, opts.host);
  });

}).call(this);
